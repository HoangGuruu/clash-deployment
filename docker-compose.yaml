version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: nestjs-backend
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      PORT: ${PORT}
      APP_URL: ${APP_URL}
      CLIENT_URL: ${CLIENT_URL}
      JWT_SECRET: ${JWT_SECRET}
      SMTP_HOST: ${SMTP_HOST} 
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD} 
      FROM_EMAIL: ${FROM_EMAIL}
    ports:
      - "${BACKEND_PORT}:8000"

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: nextjs-frontend
    restart: always
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      IMAGE_PROTOCOL: ${IMAGE_PROTOCOL}
      IMAGE_HOST: ${IMAGE_HOST}
      IMAGE_PORT: ${IMAGE_PORT}
    ports:
      - "${FRONTEND_PORT}:3000"

volumes:
  pgdata:
